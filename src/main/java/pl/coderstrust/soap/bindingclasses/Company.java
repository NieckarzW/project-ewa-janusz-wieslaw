//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.05 at 12:07:27 PM CEST 
//


package pl.coderstrust.soap.bindingclasses;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for company complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="company"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="accountNumber" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="address" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="email" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="phoneNumber" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="taxId" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "company", propOrder = {
    "id",
    "accountNumber",
    "address",
    "email",
    "name",
    "phoneNumber",
    "taxId"
})
public class Company
    implements Cloneable, CopyTo, Equals, HashCode, ToString {

  protected long id;
  @XmlElement(required = true)
  protected String accountNumber;
  @XmlElement(required = true)
  protected String address;
  @XmlElement(required = true)
  protected String email;
  @XmlElement(required = true)
  protected String name;
  @XmlElement(required = true)
  protected String phoneNumber;
  @XmlElement(required = true)
  protected String taxId;

  /**
   * Gets the value of the id property.
   */
  public long getId() {
    return id;
  }

  /**
   * Sets the value of the id property.
   */
  public void setId(long value) {
    id = value;
  }

  /**
   * Gets the value of the accountNumber property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getAccountNumber() {
    return accountNumber;
  }

  /**
   * Sets the value of the accountNumber property.
   *
   * @param value allowed object is
   *              {@link String }
   */
  public void setAccountNumber(String value) {
    accountNumber = value;
  }

  /**
   * Gets the value of the address property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getAddress() {
    return address;
  }

  /**
   * Sets the value of the address property.
   *
   * @param value allowed object is
   *              {@link String }
   */
  public void setAddress(String value) {
    address = value;
  }

  /**
   * Gets the value of the email property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getEmail() {
    return email;
  }

  /**
   * Sets the value of the email property.
   *
   * @param value allowed object is
   *              {@link String }
   */
  public void setEmail(String value) {
    email = value;
  }

  /**
   * Gets the value of the name property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getName() {
    return name;
  }

  /**
   * Sets the value of the name property.
   *
   * @param value allowed object is
   *              {@link String }
   */
  public void setName(String value) {
    name = value;
  }

  /**
   * Gets the value of the phoneNumber property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getPhoneNumber() {
    return phoneNumber;
  }

  /**
   * Sets the value of the phoneNumber property.
   *
   * @param value allowed object is
   *              {@link String }
   */
  public void setPhoneNumber(String value) {
    phoneNumber = value;
  }

  /**
   * Gets the value of the taxId property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getTaxId() {
    return taxId;
  }

  /**
   * Sets the value of the taxId property.
   *
   * @param value allowed object is
   *              {@link String }
   */
  public void setTaxId(String value) {
    taxId = value;
  }

  @Override
  public String toString() {
    ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
    StringBuilder buffer = new StringBuilder();
    append(null, buffer, strategy);
    return buffer.toString();
  }

  @Override
  public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
    strategy.appendStart(locator, this, buffer);
    appendFields(locator, buffer, strategy);
    strategy.appendEnd(locator, this, buffer);
    return buffer;
  }

  @Override
  public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
    {
      long theId;
      theId = (true ? getId() : 0L);
      strategy.appendField(locator, this, "id", buffer, theId);
    }
    {
      String theAccountNumber;
      theAccountNumber = getAccountNumber();
      strategy.appendField(locator, this, "accountNumber", buffer, theAccountNumber);
    }
    {
      String theAddress;
      theAddress = getAddress();
      strategy.appendField(locator, this, "address", buffer, theAddress);
    }
    {
      String theEmail;
      theEmail = getEmail();
      strategy.appendField(locator, this, "email", buffer, theEmail);
    }
    {
      String theName;
      theName = getName();
      strategy.appendField(locator, this, "name", buffer, theName);
    }
    {
      String thePhoneNumber;
      thePhoneNumber = getPhoneNumber();
      strategy.appendField(locator, this, "phoneNumber", buffer, thePhoneNumber);
    }
    {
      String theTaxId;
      theTaxId = getTaxId();
      strategy.appendField(locator, this, "taxId", buffer, theTaxId);
    }
    return buffer;
  }

  @Override
  public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
    if (!(object instanceof Company)) {
      return false;
    }
    if (this == object) {
      return true;
    }
    Company that = ((Company) object);
    {
      long lhsId;
      lhsId = (true ? getId() : 0L);
      long rhsId;
      rhsId = (true ? that.getId() : 0L);
      if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
        return false;
      }
    }
    {
      String lhsAccountNumber;
      lhsAccountNumber = getAccountNumber();
      String rhsAccountNumber;
      rhsAccountNumber = that.getAccountNumber();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "accountNumber", lhsAccountNumber), LocatorUtils.property(thatLocator, "accountNumber", rhsAccountNumber), lhsAccountNumber, rhsAccountNumber)) {
        return false;
      }
    }
    {
      String lhsAddress;
      lhsAddress = getAddress();
      String rhsAddress;
      rhsAddress = that.getAddress();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsAddress), LocatorUtils.property(thatLocator, "address", rhsAddress), lhsAddress, rhsAddress)) {
        return false;
      }
    }
    {
      String lhsEmail;
      lhsEmail = getEmail();
      String rhsEmail;
      rhsEmail = that.getEmail();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "email", lhsEmail), LocatorUtils.property(thatLocator, "email", rhsEmail), lhsEmail, rhsEmail)) {
        return false;
      }
    }
    {
      String lhsName;
      lhsName = getName();
      String rhsName;
      rhsName = that.getName();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
        return false;
      }
    }
    {
      String lhsPhoneNumber;
      lhsPhoneNumber = getPhoneNumber();
      String rhsPhoneNumber;
      rhsPhoneNumber = that.getPhoneNumber();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneNumber", lhsPhoneNumber), LocatorUtils.property(thatLocator, "phoneNumber", rhsPhoneNumber), lhsPhoneNumber, rhsPhoneNumber)) {
        return false;
      }
    }
    {
      String lhsTaxId;
      lhsTaxId = getTaxId();
      String rhsTaxId;
      rhsTaxId = that.getTaxId();
      return strategy.equals(LocatorUtils.property(thisLocator, "taxId", lhsTaxId), LocatorUtils.property(thatLocator, "taxId", rhsTaxId), lhsTaxId, rhsTaxId);
    }
  }

  @Override
  public boolean equals(Object object) {
    EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
    return equals(null, null, object, strategy);
  }

  @Override
  public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
    int currentHashCode = 1;
    {
      long theId;
      theId = (true ? getId() : 0L);
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
    }
    {
      String theAccountNumber;
      theAccountNumber = getAccountNumber();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountNumber", theAccountNumber), currentHashCode, theAccountNumber);
    }
    {
      String theAddress;
      theAddress = getAddress();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theAddress), currentHashCode, theAddress);
    }
    {
      String theEmail;
      theEmail = getEmail();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "email", theEmail), currentHashCode, theEmail);
    }
    {
      String theName;
      theName = getName();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
    }
    {
      String thePhoneNumber;
      thePhoneNumber = getPhoneNumber();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneNumber", thePhoneNumber), currentHashCode, thePhoneNumber);
    }
    {
      String theTaxId;
      theTaxId = getTaxId();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxId", theTaxId), currentHashCode, theTaxId);
    }
    return currentHashCode;
  }

  @Override
  public int hashCode() {
    HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
    return hashCode(null, strategy);
  }

  @Override
  public Object clone() {
    return copyTo(createNewInstance());
  }

  @Override
  public Object copyTo(Object target) {
    CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
    return copyTo(null, target, strategy);
  }

  @Override
  public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
    Object draftCopy = ((target == null) ? createNewInstance() : target);
    if (draftCopy instanceof Company) {
      Company copy = ((Company) draftCopy);
      long sourceId;
      sourceId = (true ? getId() : 0L);
      long copyId = strategy.copy(LocatorUtils.property(locator, "id", sourceId), sourceId);
      copy.setId(copyId);
      if (accountNumber != null) {
        String sourceAccountNumber;
        sourceAccountNumber = getAccountNumber();
        String copyAccountNumber = ((String) strategy.copy(LocatorUtils.property(locator, "accountNumber", sourceAccountNumber), sourceAccountNumber));
        copy.setAccountNumber(copyAccountNumber);
      } else {
        copy.accountNumber = null;
      }
      if (address != null) {
        String sourceAddress;
        sourceAddress = getAddress();
        String copyAddress = ((String) strategy.copy(LocatorUtils.property(locator, "address", sourceAddress), sourceAddress));
        copy.setAddress(copyAddress);
      } else {
        copy.address = null;
      }
      if (email != null) {
        String sourceEmail;
        sourceEmail = getEmail();
        String copyEmail = ((String) strategy.copy(LocatorUtils.property(locator, "email", sourceEmail), sourceEmail));
        copy.setEmail(copyEmail);
      } else {
        copy.email = null;
      }
      if (name != null) {
        String sourceName;
        sourceName = getName();
        String copyName = ((String) strategy.copy(LocatorUtils.property(locator, "name", sourceName), sourceName));
        copy.setName(copyName);
      } else {
        copy.name = null;
      }
      if (phoneNumber != null) {
        String sourcePhoneNumber;
        sourcePhoneNumber = getPhoneNumber();
        String copyPhoneNumber = ((String) strategy.copy(LocatorUtils.property(locator, "phoneNumber", sourcePhoneNumber), sourcePhoneNumber));
        copy.setPhoneNumber(copyPhoneNumber);
      } else {
        copy.phoneNumber = null;
      }
      if (taxId != null) {
        String sourceTaxId;
        sourceTaxId = getTaxId();
        String copyTaxId = ((String) strategy.copy(LocatorUtils.property(locator, "taxId", sourceTaxId), sourceTaxId));
        copy.setTaxId(copyTaxId);
      } else {
        copy.taxId = null;
      }
    }
    return draftCopy;
  }

  @Override
  public Object createNewInstance() {
    return new Company();
  }

}
