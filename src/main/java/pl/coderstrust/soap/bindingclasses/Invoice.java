//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.05 at 12:46:56 PM CEST 
//


package pl.coderstrust.soap.bindingclasses;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for invoice complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="invoice"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}long" minOccurs="0" form="qualified"/&gt;
 *         &lt;element name="number" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="dueDate" type="{http://www.w3.org/2001/XMLSchema}date"/&gt;
 *         &lt;element name="issueDate" type="{http://www.w3.org/2001/XMLSchema}date"/&gt;
 *         &lt;element name="seller" type="{http://project-10-ewa-januss-wieslaw}company"/&gt;
 *         &lt;element name="buyer" type="{http://project-10-ewa-januss-wieslaw}company"/&gt;
 *         &lt;element name="entries" type="{http://project-10-ewa-januss-wieslaw}entriesList"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "invoice", propOrder = {
    "id",
    "number",
    "dueDate",
    "issueDate",
    "seller",
    "buyer",
    "entries"
})
public class Invoice
    implements Cloneable, CopyTo, Equals, HashCode, ToString {

  @XmlElementRef(name = "id", namespace = "http://project-10-ewa-januss-wieslaw", type = JAXBElement.class, required = false)
  protected JAXBElement<Long> id;
  @XmlElement(required = true)
  protected String number;
  @XmlElement(required = true)
  @XmlSchemaType(name = "date")
  protected XMLGregorianCalendar dueDate;
  @XmlElement(required = true)
  @XmlSchemaType(name = "date")
  protected XMLGregorianCalendar issueDate;
  @XmlElement(required = true)
  protected Company seller;
  @XmlElement(required = true)
  protected Company buyer;
  @XmlElement(required = true)
  protected EntriesList entries;

  /**
   * Gets the value of the id property.
   *
   * @return possible object is
   * {@link JAXBElement }{@code <}{@link Long }{@code >}
   */
  public JAXBElement<Long> getId() {
    return id;
  }

  /**
   * Sets the value of the id property.
   *
   * @param value allowed object is
   *              {@link JAXBElement }{@code <}{@link Long }{@code >}
   */
  public void setId(JAXBElement<Long> value) {
    this.id = value;
  }

  /**
   * Gets the value of the number property.
   *
   * @return possible object is
   * {@link String }
   */
  public String getNumber() {
    return number;
  }

  /**
   * Sets the value of the number property.
   *
   * @param value allowed object is
   *              {@link String }
   */
  public void setNumber(String value) {
    this.number = value;
  }

  /**
   * Gets the value of the dueDate property.
   *
   * @return possible object is
   * {@link XMLGregorianCalendar }
   */
  public XMLGregorianCalendar getDueDate() {
    return dueDate;
  }

  /**
   * Sets the value of the dueDate property.
   *
   * @param value allowed object is
   *              {@link XMLGregorianCalendar }
   */
  public void setDueDate(XMLGregorianCalendar value) {
    this.dueDate = value;
  }

  /**
   * Gets the value of the issueDate property.
   *
   * @return possible object is
   * {@link XMLGregorianCalendar }
   */
  public XMLGregorianCalendar getIssueDate() {
    return issueDate;
  }

  /**
   * Sets the value of the issueDate property.
   *
   * @param value allowed object is
   *              {@link XMLGregorianCalendar }
   */
  public void setIssueDate(XMLGregorianCalendar value) {
    this.issueDate = value;
  }

  /**
   * Gets the value of the seller property.
   *
   * @return possible object is
   * {@link Company }
   */
  public Company getSeller() {
    return seller;
  }

  /**
   * Sets the value of the seller property.
   *
   * @param value allowed object is
   *              {@link Company }
   */
  public void setSeller(Company value) {
    this.seller = value;
  }

  /**
   * Gets the value of the buyer property.
   *
   * @return possible object is
   * {@link Company }
   */
  public Company getBuyer() {
    return buyer;
  }

  /**
   * Sets the value of the buyer property.
   *
   * @param value allowed object is
   *              {@link Company }
   */
  public void setBuyer(Company value) {
    this.buyer = value;
  }

  /**
   * Gets the value of the entries property.
   *
   * @return possible object is
   * {@link EntriesList }
   */
  public EntriesList getEntries() {
    return entries;
  }

  /**
   * Sets the value of the entries property.
   *
   * @param value allowed object is
   *              {@link EntriesList }
   */
  public void setEntries(EntriesList value) {
    this.entries = value;
  }

  public String toString() {
    final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
    final StringBuilder buffer = new StringBuilder();
    append(null, buffer, strategy);
    return buffer.toString();
  }

  public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
    strategy.appendStart(locator, this, buffer);
    appendFields(locator, buffer, strategy);
    strategy.appendEnd(locator, this, buffer);
    return buffer;
  }

  public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
    {
      JAXBElement<Long> theId;
      theId = this.getId();
      strategy.appendField(locator, this, "id", buffer, theId);
    }
    {
      String theNumber;
      theNumber = this.getNumber();
      strategy.appendField(locator, this, "number", buffer, theNumber);
    }
    {
      XMLGregorianCalendar theDueDate;
      theDueDate = this.getDueDate();
      strategy.appendField(locator, this, "dueDate", buffer, theDueDate);
    }
    {
      XMLGregorianCalendar theIssueDate;
      theIssueDate = this.getIssueDate();
      strategy.appendField(locator, this, "issueDate", buffer, theIssueDate);
    }
    {
      Company theSeller;
      theSeller = this.getSeller();
      strategy.appendField(locator, this, "seller", buffer, theSeller);
    }
    {
      Company theBuyer;
      theBuyer = this.getBuyer();
      strategy.appendField(locator, this, "buyer", buffer, theBuyer);
    }
    {
      EntriesList theEntries;
      theEntries = this.getEntries();
      strategy.appendField(locator, this, "entries", buffer, theEntries);
    }
    return buffer;
  }

  public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
    if (!(object instanceof Invoice)) {
      return false;
    }
    if (this == object) {
      return true;
    }
    final Invoice that = ((Invoice) object);
    {
      JAXBElement<Long> lhsId;
      lhsId = this.getId();
      JAXBElement<Long> rhsId;
      rhsId = that.getId();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
        return false;
      }
    }
    {
      String lhsNumber;
      lhsNumber = this.getNumber();
      String rhsNumber;
      rhsNumber = that.getNumber();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "number", lhsNumber), LocatorUtils.property(thatLocator, "number", rhsNumber), lhsNumber, rhsNumber)) {
        return false;
      }
    }
    {
      XMLGregorianCalendar lhsDueDate;
      lhsDueDate = this.getDueDate();
      XMLGregorianCalendar rhsDueDate;
      rhsDueDate = that.getDueDate();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "dueDate", lhsDueDate), LocatorUtils.property(thatLocator, "dueDate", rhsDueDate), lhsDueDate, rhsDueDate)) {
        return false;
      }
    }
    {
      XMLGregorianCalendar lhsIssueDate;
      lhsIssueDate = this.getIssueDate();
      XMLGregorianCalendar rhsIssueDate;
      rhsIssueDate = that.getIssueDate();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "issueDate", lhsIssueDate), LocatorUtils.property(thatLocator, "issueDate", rhsIssueDate), lhsIssueDate, rhsIssueDate)) {
        return false;
      }
    }
    {
      Company lhsSeller;
      lhsSeller = this.getSeller();
      Company rhsSeller;
      rhsSeller = that.getSeller();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "seller", lhsSeller), LocatorUtils.property(thatLocator, "seller", rhsSeller), lhsSeller, rhsSeller)) {
        return false;
      }
    }
    {
      Company lhsBuyer;
      lhsBuyer = this.getBuyer();
      Company rhsBuyer;
      rhsBuyer = that.getBuyer();
      if (!strategy.equals(LocatorUtils.property(thisLocator, "buyer", lhsBuyer), LocatorUtils.property(thatLocator, "buyer", rhsBuyer), lhsBuyer, rhsBuyer)) {
        return false;
      }
    }
    {
      EntriesList lhsEntries;
      lhsEntries = this.getEntries();
      EntriesList rhsEntries;
      rhsEntries = that.getEntries();
      return strategy.equals(LocatorUtils.property(thisLocator, "entries", lhsEntries), LocatorUtils.property(thatLocator, "entries", rhsEntries), lhsEntries, rhsEntries);
    }
  }

  public boolean equals(Object object) {
    final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
    return equals(null, null, object, strategy);
  }

  public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
    int currentHashCode = 1;
    {
      JAXBElement<Long> theId;
      theId = this.getId();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
    }
    {
      String theNumber;
      theNumber = this.getNumber();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "number", theNumber), currentHashCode, theNumber);
    }
    {
      XMLGregorianCalendar theDueDate;
      theDueDate = this.getDueDate();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dueDate", theDueDate), currentHashCode, theDueDate);
    }
    {
      XMLGregorianCalendar theIssueDate;
      theIssueDate = this.getIssueDate();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "issueDate", theIssueDate), currentHashCode, theIssueDate);
    }
    {
      Company theSeller;
      theSeller = this.getSeller();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "seller", theSeller), currentHashCode, theSeller);
    }
    {
      Company theBuyer;
      theBuyer = this.getBuyer();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "buyer", theBuyer), currentHashCode, theBuyer);
    }
    {
      EntriesList theEntries;
      theEntries = this.getEntries();
      currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "entries", theEntries), currentHashCode, theEntries);
    }
    return currentHashCode;
  }

  public int hashCode() {
    final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
    return this.hashCode(null, strategy);
  }

  public Object clone() {
    return copyTo(createNewInstance());
  }

  public Object copyTo(Object target) {
    final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
    return copyTo(null, target, strategy);
  }

  public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
    final Object draftCopy = ((target == null) ? createNewInstance() : target);
    if (draftCopy instanceof Invoice) {
      final Invoice copy = ((Invoice) draftCopy);
      if (this.id != null) {
        JAXBElement<Long> sourceId;
        sourceId = this.getId();
        @SuppressWarnings("unchecked")
        JAXBElement<Long> copyId = ((JAXBElement<Long>) strategy.copy(LocatorUtils.property(locator, "id", sourceId), sourceId));
        copy.setId(copyId);
      } else {
        copy.id = null;
      }
      if (this.number != null) {
        String sourceNumber;
        sourceNumber = this.getNumber();
        String copyNumber = ((String) strategy.copy(LocatorUtils.property(locator, "number", sourceNumber), sourceNumber));
        copy.setNumber(copyNumber);
      } else {
        copy.number = null;
      }
      if (this.dueDate != null) {
        XMLGregorianCalendar sourceDueDate;
        sourceDueDate = this.getDueDate();
        XMLGregorianCalendar copyDueDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "dueDate", sourceDueDate), sourceDueDate));
        copy.setDueDate(copyDueDate);
      } else {
        copy.dueDate = null;
      }
      if (this.issueDate != null) {
        XMLGregorianCalendar sourceIssueDate;
        sourceIssueDate = this.getIssueDate();
        XMLGregorianCalendar copyIssueDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "issueDate", sourceIssueDate), sourceIssueDate));
        copy.setIssueDate(copyIssueDate);
      } else {
        copy.issueDate = null;
      }
      if (this.seller != null) {
        Company sourceSeller;
        sourceSeller = this.getSeller();
        Company copySeller = ((Company) strategy.copy(LocatorUtils.property(locator, "seller", sourceSeller), sourceSeller));
        copy.setSeller(copySeller);
      } else {
        copy.seller = null;
      }
      if (this.buyer != null) {
        Company sourceBuyer;
        sourceBuyer = this.getBuyer();
        Company copyBuyer = ((Company) strategy.copy(LocatorUtils.property(locator, "buyer", sourceBuyer), sourceBuyer));
        copy.setBuyer(copyBuyer);
      } else {
        copy.buyer = null;
      }
      if (this.entries != null) {
        EntriesList sourceEntries;
        sourceEntries = this.getEntries();
        EntriesList copyEntries = ((EntriesList) strategy.copy(LocatorUtils.property(locator, "entries", sourceEntries), sourceEntries));
        copy.setEntries(copyEntries);
      } else {
        copy.entries = null;
      }
    }
    return draftCopy;
  }

  public Object createNewInstance() {
    return new Invoice();
  }

}
